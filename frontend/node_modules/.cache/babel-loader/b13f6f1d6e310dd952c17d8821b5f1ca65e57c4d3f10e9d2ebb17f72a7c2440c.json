{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\souy\\\\Desktop\\\\best website\\\\frontend\\\\src\\\\pages\\\\CurrentGame.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './CurrentGame.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrentGame = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isInGame, setIsInGame] = useState(false);\n  const [match, setMatch] = useState(null);\n  useEffect(() => {\n    const fetchCurrentGame = async () => {\n      const userData = JSON.parse(sessionStorage.getItem('userData') || '{}');\n      if (!userData.discordId) {\n        navigate('/');\n        return;\n      }\n      try {\n        const response = await axios.get(`http://localhost:5000/match/current`, {\n          params: {\n            discordId: userData.discordId\n          }\n        });\n        if (response.data.match) {\n          setIsInGame(true);\n          setMatch(response.data.match);\n        } else {\n          setIsInGame(false);\n        }\n      } catch (error) {\n        console.error('Error fetching current game:', error);\n      }\n    };\n    fetchCurrentGame();\n  }, [navigate]);\n  const handleLeaveGame = async () => {\n    const userData = JSON.parse(sessionStorage.getItem('userData') || '{}');\n    if (!userData.discordId) {\n      navigate('/');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/match/leave', {\n        username: userData.username\n      });\n      sessionStorage.removeItem('currentMatch');\n      setIsInGame(false);\n      navigate('/tournaments');\n    } catch (error) {\n      console.error('Error leaving game:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"current-game\",\n    children: isInGame ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You are in a game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Match ID: \", match === null || match === void 0 ? void 0 : match.matchId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(`/match/${match === null || match === void 0 ? void 0 : match.matchId}`),\n        children: \"Go to Match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeaveGame,\n        children: \"Leave Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"You are not in a game.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/tournaments'),\n          children: \"Go to Tournaments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrentGame, \"ZvKXOPlMuc0oCFf4g5EZjN9hZCw=\", false, function () {\n  return [useNavigate];\n});\n_c = CurrentGame;\nexport default CurrentGame;\nvar _c;\n$RefreshReg$(_c, \"CurrentGame\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentGame","_s","navigate","isInGame","setIsInGame","match","setMatch","fetchCurrentGame","userData","JSON","parse","sessionStorage","getItem","discordId","response","get","params","data","error","console","handleLeaveGame","post","username","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","matchId","onClick","_c","$RefreshReg$"],"sources":["C:/Users/souy/Desktop/best website/frontend/src/pages/CurrentGame.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './CurrentGame.css';\r\n\r\nconst CurrentGame = () => {\r\n  const navigate = useNavigate();\r\n  const [isInGame, setIsInGame] = useState(false);\r\n  const [match, setMatch] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentGame = async () => {\r\n      const userData = JSON.parse(sessionStorage.getItem('userData') || '{}');\r\n      if (!userData.discordId) {\r\n        navigate('/');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/match/current`, {\r\n          params: { discordId: userData.discordId },\r\n        });\r\n\r\n        if (response.data.match) {\r\n          setIsInGame(true);\r\n          setMatch(response.data.match);\r\n        } else {\r\n          setIsInGame(false);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching current game:', error);\r\n      }\r\n    };\r\n\r\n    fetchCurrentGame();\r\n  }, [navigate]);\r\n\r\n  const handleLeaveGame = async () => {\r\n    const userData = JSON.parse(sessionStorage.getItem('userData') || '{}');\r\n    if (!userData.discordId) {\r\n      navigate('/');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/match/leave', {\r\n        username: userData.username,\r\n      });\r\n\r\n      sessionStorage.removeItem('currentMatch');\r\n      setIsInGame(false);\r\n      navigate('/tournaments');\r\n    } catch (error) {\r\n      console.error('Error leaving game:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"current-game\">\r\n      {isInGame ? (\r\n        <>\r\n          <h2>You are in a game!</h2>\r\n          <p>Match ID: {match?.matchId}</p>\r\n          <button onClick={() => navigate(`/match/${match?.matchId}`)}>Go to Match</button>\r\n          <button onClick={handleLeaveGame}>Leave Game</button>\r\n        </>\r\n      ) : (\r\n        <div className=\"popup-container\">\r\n          <div className=\"popup\">\r\n            <h3>You are not in a game.</h3>\r\n            <button onClick={() => navigate('/tournaments')}>Go to Tournaments</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}