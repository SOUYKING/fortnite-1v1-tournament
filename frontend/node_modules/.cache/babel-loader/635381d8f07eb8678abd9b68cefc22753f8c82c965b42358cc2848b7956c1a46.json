{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\souy\\\\Desktop\\\\best website\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Tournaments from './pages/Tournaments';\nimport Account from './pages/Account';\nimport AdminDashboard from './pages/AdminDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if query parameters exist in the URL\n    const params = new URLSearchParams(window.location.search);\n    const accessToken = params.get('accessToken');\n    const username = params.get('username');\n    if (accessToken && username) {\n      // Set sessionStorage for persistent login\n      sessionStorage.setItem('userData', JSON.stringify({\n        accessToken,\n        username,\n        isAdmin: false // Default to false; update this based on backend verification\n      }));\n\n      // Clear query parameters from the URL\n      window.history.replaceState({}, document.title, '/dashboard');\n      setIsAuthenticated(true);\n      setIsAdmin(false); // Update this logic based on admin status\n    } else {\n      // Check sessionStorage for existing authentication\n      const userData = sessionStorage.getItem('userData');\n      if (userData) {\n        const parsedData = JSON.parse(userData);\n        setIsAuthenticated(true);\n        setIsAdmin(parsedData.isAdmin === 'true');\n      }\n    }\n  }, []);\n  const handleLogout = () => {\n    sessionStorage.clear();\n    setIsAuthenticated(false);\n    setIsAdmin(false);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        onLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          padding: '20px',\n          backgroundColor: '#f4f4f4'\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/tournaments\",\n            element: /*#__PURE__*/_jsxDEV(Tournaments, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/account\",\n            element: /*#__PURE__*/_jsxDEV(Account, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), isAdmin && /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/admin-dashboard\",\n            element: /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"PcBzfBLYPGN2L/9xOGpwyFQTprI=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Sidebar","Login","Dashboard","Tournaments","Account","AdminDashboard","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","isAdmin","setIsAdmin","navigate","params","URLSearchParams","window","location","search","accessToken","get","username","sessionStorage","setItem","JSON","stringify","history","replaceState","document","title","userData","getItem","parsedData","parse","handleLogout","clear","children","style","display","minHeight","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","flex","padding","backgroundColor","path","element","to","_c","$RefreshReg$"],"sources":["C:/Users/souy/Desktop/best website/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\r\nimport Sidebar from './components/Sidebar';\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Tournaments from './pages/Tournaments';\r\nimport Account from './pages/Account';\r\nimport AdminDashboard from './pages/AdminDashboard';\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Check if query parameters exist in the URL\r\n    const params = new URLSearchParams(window.location.search);\r\n    const accessToken = params.get('accessToken');\r\n    const username = params.get('username');\r\n\r\n    if (accessToken && username) {\r\n      // Set sessionStorage for persistent login\r\n      sessionStorage.setItem(\r\n        'userData',\r\n        JSON.stringify({\r\n          accessToken,\r\n          username,\r\n          isAdmin: false, // Default to false; update this based on backend verification\r\n        })\r\n      );\r\n\r\n      // Clear query parameters from the URL\r\n      window.history.replaceState({}, document.title, '/dashboard');\r\n\r\n      setIsAuthenticated(true);\r\n      setIsAdmin(false); // Update this logic based on admin status\r\n    } else {\r\n      // Check sessionStorage for existing authentication\r\n      const userData = sessionStorage.getItem('userData');\r\n      if (userData) {\r\n        const parsedData = JSON.parse(userData);\r\n        setIsAuthenticated(true);\r\n        setIsAdmin(parsedData.isAdmin === 'true');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.clear();\r\n    setIsAuthenticated(false);\r\n    setIsAdmin(false);\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      {isAuthenticated ? (\r\n        <div style={{ display: 'flex', minHeight: '100vh' }}>\r\n          <Sidebar onLogout={handleLogout} />\r\n          <div style={{ flex: 1, padding: '20px', backgroundColor: '#f4f4f4' }}>\r\n            <Routes>\r\n              <Route path=\"/dashboard\" element={<Dashboard />} />\r\n              <Route path=\"/tournaments\" element={<Tournaments />} />\r\n              <Route path=\"/account\" element={<Account />} />\r\n              {isAdmin && (\r\n                <Route path=\"/admin-dashboard\" element={<AdminDashboard />} />\r\n              )}\r\n              <Route path=\"*\" element={<Navigate to=\"/dashboard\" />} />\r\n            </Routes>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Routes>\r\n          <Route path=\"*\" element={<Login />} />\r\n        </Routes>\r\n      )}\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}