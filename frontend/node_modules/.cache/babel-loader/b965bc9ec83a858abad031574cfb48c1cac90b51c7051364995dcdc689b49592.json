{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\souy\\\\Desktop\\\\best website\\\\frontend\\\\src\\\\pages\\\\Tournaments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Tournaments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tournaments = () => {\n  _s();\n  const [currentTournaments, setCurrentTournaments] = useState([]);\n  const [pastTournaments, setPastTournaments] = useState([]);\n  const [activeTab, setActiveTab] = useState('current');\n  const [statusMessage, setStatusMessage] = useState('');\n  const navigate = useNavigate();\n  const now = new Date();\n  useEffect(() => {\n    const fetchTournaments = async () => {\n      try {\n        const currentResponse = await axios.get('http://localhost:5000/tournament/cups');\n        const pastResponse = await axios.get('http://localhost:5000/tournament/past');\n        setCurrentTournaments(currentResponse.data);\n        setPastTournaments(pastResponse.data);\n      } catch (error) {\n        console.error('Error fetching tournaments:', error.message);\n      }\n    };\n    fetchTournaments();\n  }, []);\n  const handleJoinQueue = async tournamentId => {\n    const user = JSON.parse(sessionStorage.getItem('userData'));\n    if (!user) {\n      setStatusMessage('You must be logged in to join the queue.');\n      return;\n    }\n    try {\n      // Check if the user is already in a game\n      const {\n        data\n      } = await axios.get(`http://localhost:5000/matchmaking/status?username=${user.username}`);\n      if (data.status === 'inGame') {\n        setStatusMessage('⚠️ You are already in a match! Finish or leave before joining a new one.');\n        return;\n      }\n\n      // If not in a game, allow joining the queue\n      navigate(`/queue/${tournamentId}`);\n    } catch (error) {\n      console.error('Error checking matchmaking status:', error.message);\n      setStatusMessage('⚠️ Error checking matchmaking status.');\n    }\n  };\n  const renderCurrentTournaments = () => {\n    return currentTournaments.map(tournament => {\n      const hasStarted = new Date(tournament.startTime) <= now;\n      const hasEnded = new Date(tournament.endTime) < now;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tournament-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tournament.imageUrl,\n          alt: tournament.title,\n          className: \"tournament-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [tournament.title, \" [\", new Date(tournament.startTime).toLocaleDateString(), \"]\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: tournament.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" \", new Date(tournament.startTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \" \", new Date(tournament.endTime).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tournament-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"join-button\",\n            disabled: !hasStarted || hasEnded,\n            title: !hasStarted ? 'Tournament has not started yet.' : hasEnded ? 'Tournament has ended.' : '',\n            onClick: () => handleJoinQueue(tournament._id),\n            children: \"Join Queue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"leaderboard-button\",\n            children: \"Leaderboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, tournament._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tournaments-container\",\n    children: [statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'current' ? 'active' : ''}`,\n        onClick: () => setActiveTab('current'),\n        children: \"All Cups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'past' ? 'active' : ''}`,\n        onClick: () => setActiveTab('past'),\n        children: \"Past Cups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tournaments-list\",\n      children: [activeTab === 'current' && renderCurrentTournaments(), activeTab === 'past' && renderPastTournaments()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Tournaments, \"5mIRVPJ9PWmfqc+0WKlGA7DSndI=\", false, function () {\n  return [useNavigate];\n});\n_c = Tournaments;\nexport default Tournaments;\nvar _c;\n$RefreshReg$(_c, \"Tournaments\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Tournaments","_s","currentTournaments","setCurrentTournaments","pastTournaments","setPastTournaments","activeTab","setActiveTab","statusMessage","setStatusMessage","navigate","now","Date","fetchTournaments","currentResponse","get","pastResponse","data","error","console","message","handleJoinQueue","tournamentId","user","JSON","parse","sessionStorage","getItem","username","status","renderCurrentTournaments","map","tournament","hasStarted","startTime","hasEnded","endTime","className","children","src","imageUrl","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","description","toLocaleString","disabled","onClick","_id","renderPastTournaments","_c","$RefreshReg$"],"sources":["C:/Users/souy/Desktop/best website/frontend/src/pages/Tournaments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Tournaments.css';\r\n\r\nconst Tournaments = () => {\r\n  const [currentTournaments, setCurrentTournaments] = useState([]);\r\n  const [pastTournaments, setPastTournaments] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('current');\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const now = new Date();\r\n\r\n  useEffect(() => {\r\n    const fetchTournaments = async () => {\r\n      try {\r\n        const currentResponse = await axios.get('http://localhost:5000/tournament/cups');\r\n        const pastResponse = await axios.get('http://localhost:5000/tournament/past');\r\n        setCurrentTournaments(currentResponse.data);\r\n        setPastTournaments(pastResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tournaments:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchTournaments();\r\n  }, []);\r\n\r\n  const handleJoinQueue = async (tournamentId) => {\r\n    const user = JSON.parse(sessionStorage.getItem('userData'));\r\n    if (!user) {\r\n      setStatusMessage('You must be logged in to join the queue.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Check if the user is already in a game\r\n      const { data } = await axios.get(`http://localhost:5000/matchmaking/status?username=${user.username}`);\r\n\r\n      if (data.status === 'inGame') {\r\n        setStatusMessage('⚠️ You are already in a match! Finish or leave before joining a new one.');\r\n        return;\r\n      }\r\n\r\n      // If not in a game, allow joining the queue\r\n      navigate(`/queue/${tournamentId}`);\r\n\r\n    } catch (error) {\r\n      console.error('Error checking matchmaking status:', error.message);\r\n      setStatusMessage('⚠️ Error checking matchmaking status.');\r\n    }\r\n  };\r\n\r\n  const renderCurrentTournaments = () => {\r\n    return currentTournaments.map((tournament) => {\r\n      const hasStarted = new Date(tournament.startTime) <= now;\r\n      const hasEnded = new Date(tournament.endTime) < now;\r\n\r\n      return (\r\n        <div key={tournament._id} className=\"tournament-card\">\r\n          <img src={tournament.imageUrl} alt={tournament.title} className=\"tournament-image\" />\r\n          <h3>\r\n            {tournament.title} [{new Date(tournament.startTime).toLocaleDateString()}]\r\n          </h3>\r\n          <p>{tournament.description}</p>\r\n          <p>\r\n            <strong>Start:</strong> {new Date(tournament.startTime).toLocaleString()}\r\n          </p>\r\n          <p>\r\n            <strong>End:</strong> {new Date(tournament.endTime).toLocaleString()}\r\n          </p>\r\n          <div className=\"tournament-actions\">\r\n            <button\r\n              className=\"join-button\"\r\n              disabled={!hasStarted || hasEnded}\r\n              title={\r\n                !hasStarted\r\n                  ? 'Tournament has not started yet.'\r\n                  : hasEnded\r\n                  ? 'Tournament has ended.'\r\n                  : ''\r\n              }\r\n              onClick={() => handleJoinQueue(tournament._id)}\r\n            >\r\n              Join Queue\r\n            </button>\r\n            <button className=\"leaderboard-button\">Leaderboard</button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tournaments-container\">\r\n      {statusMessage && <p className=\"error-message\">{statusMessage}</p>}\r\n\r\n      <div className=\"tabs\">\r\n        <button\r\n          className={`tab-button ${activeTab === 'current' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('current')}\r\n        >\r\n          All Cups\r\n        </button>\r\n        <button\r\n          className={`tab-button ${activeTab === 'past' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('past')}\r\n        >\r\n          Past Cups\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"tournaments-list\">\r\n        {activeTab === 'current' && renderCurrentTournaments()}\r\n        {activeTab === 'past' && renderPastTournaments()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tournaments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}