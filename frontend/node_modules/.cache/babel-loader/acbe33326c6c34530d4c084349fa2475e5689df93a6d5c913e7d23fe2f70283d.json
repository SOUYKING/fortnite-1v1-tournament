{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\souy\\\\Desktop\\\\best website\\\\frontend\\\\src\\\\pages\\\\QueuePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport './QueuePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Backend URL\n\nconst QueuePage = () => {\n  _s();\n  const {\n    tournamentId\n  } = useParams();\n  const [statusMessage, setStatusMessage] = useState('Waiting for an opponent...');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [matchInfo, setMatchInfo] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userData = JSON.parse(sessionStorage.getItem('userData'));\n    const username = (userData === null || userData === void 0 ? void 0 : userData.username) || 'Guest';\n    const discordId = (userData === null || userData === void 0 ? void 0 : userData.discordId) || null;\n    const epicName = (userData === null || userData === void 0 ? void 0 : userData.epicName) || 'EpicGuest';\n    socket.emit('joinQueue', {\n      username,\n      discordId,\n      epicName,\n      tournamentId\n    });\n    socket.on('matchFound', ({\n      matchId,\n      opponent\n    }) => {\n      setStatusMessage(`Match found!`);\n      setMatchInfo({\n        matchId,\n        opponent\n      });\n    });\n    socket.on('receiveMessage', ({\n      sender,\n      message\n    }) => {\n      setChatMessages(prevMessages => [...prevMessages, {\n        sender,\n        message\n      }]);\n    });\n    return () => {\n      socket.emit('leaveQueue', {\n        username,\n        tournamentId\n      });\n      socket.disconnect();\n    };\n  }, [tournamentId]);\n  const sendMessage = () => {\n    if (!newMessage.trim()) return;\n    const userData = JSON.parse(sessionStorage.getItem('userData'));\n    const sender = (userData === null || userData === void 0 ? void 0 : userData.epicName) || 'Unknown';\n    const matchId = matchInfo === null || matchInfo === void 0 ? void 0 : matchInfo.matchId;\n    socket.emit('sendMessage', {\n      matchId,\n      message: newMessage,\n      sender\n    });\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queue-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Match Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), matchInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"match-details\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: matchInfo.opponent.avatarUrl,\n            alt: \"Opponent Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: matchInfo.opponent.epicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-messages\",\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [msg.sender, \": \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), msg.message]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-input\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(QueuePage, \"S5YJDzFJQE/c1/7uIGs24xDB2bw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QueuePage;\nexport default QueuePage;\nvar _c;\n$RefreshReg$(_c, \"QueuePage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","io","jsxDEV","_jsxDEV","socket","QueuePage","_s","tournamentId","statusMessage","setStatusMessage","chatMessages","setChatMessages","newMessage","setNewMessage","matchInfo","setMatchInfo","navigate","userData","JSON","parse","sessionStorage","getItem","username","discordId","epicName","emit","on","matchId","opponent","sender","message","prevMessages","disconnect","sendMessage","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","avatarUrl","alt","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/souy/Desktop/best website/frontend/src/pages/QueuePage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport './QueuePage.css';\r\n\r\nconst socket = io('http://localhost:5000'); // Backend URL\r\n\r\nconst QueuePage = () => {\r\n  const { tournamentId } = useParams();\r\n  const [statusMessage, setStatusMessage] = useState('Waiting for an opponent...');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [matchInfo, setMatchInfo] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    const username = userData?.username || 'Guest';\r\n    const discordId = userData?.discordId || null;\r\n    const epicName = userData?.epicName || 'EpicGuest';\r\n\r\n    socket.emit('joinQueue', { username, discordId, epicName, tournamentId });\r\n\r\n    socket.on('matchFound', ({ matchId, opponent }) => {\r\n      setStatusMessage(`Match found!`);\r\n      setMatchInfo({ matchId, opponent });\r\n    });\r\n\r\n    socket.on('receiveMessage', ({ sender, message }) => {\r\n      setChatMessages((prevMessages) => [...prevMessages, { sender, message }]);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('leaveQueue', { username, tournamentId });\r\n      socket.disconnect();\r\n    };\r\n  }, [tournamentId]);\r\n\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim()) return;\r\n    const userData = JSON.parse(sessionStorage.getItem('userData'));\r\n    const sender = userData?.epicName || 'Unknown';\r\n    const matchId = matchInfo?.matchId;\r\n\r\n    socket.emit('sendMessage', { matchId, message: newMessage, sender });\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"queue-page\">\r\n      <h2>Match Page</h2>\r\n      {matchInfo ? (\r\n        <div>\r\n          <div className=\"match-details\">\r\n            <div>\r\n              <img src={matchInfo.opponent.avatarUrl} alt=\"Opponent Avatar\" />\r\n              <h3>{matchInfo.opponent.epicName}</h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat-section\">\r\n            <div className=\"chat-messages\">\r\n              {chatMessages.map((msg, index) => (\r\n                <p key={index}>\r\n                  <strong>{msg.sender}: </strong>\r\n                  {msg.message}\r\n                </p>\r\n              ))}\r\n            </div>\r\n            <div className=\"chat-input\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n              />\r\n              <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>{statusMessage}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueuePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}